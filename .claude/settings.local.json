{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(cat:*)",
      "Bash(docker logs:*)",
      "Bash(docker-compose config:*)",
      "Bash(docker-compose down:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker start:*)",
      "Bash(docker-compose build:*)",
      "Bash(curl:*)",
      "Bash(python:*)",
      "Bash(docker ps:*)",
      "Bash(./START.bat)",
      "Bash(timeout 300 bash:*)",
      "Bash(docker-compose ps:*)",
      "Bash(docker build:*)",
      "Bash(tee:*)",
      "Bash(npm run build:*)",
      "Bash(docker restart:*)",
      "Bash(docker stats:*)",
      "Bash(time curl -s http://localhost:300)",
      "Bash(docker exec uns-claudejp-frontend sh -c \"curl -s http://localhost:3000/login > /dev/null && curl -s http://localhost:3000/dashboard > /dev/null && echo ''Pre-warmed common routes''\")",
      "Bash(docker exec:*)",
      "Bash(docker-compose restart:*)",
      "Bash(rm ANALISIS_APP.md AUTH_ERROR_401.md CAMBIOS_CODIGO.md DEPLOYMENT_LOG.md MEJORAS_APLICADAS.md RESUMEN_SOLUCION.md SECURITY_UPGRADE.md UPGRADE-TO-4.0.md FIX_DB_ERROR.md)",
      "Bash(rm COMIENZA_AQUI.txt INSTRUCCIONES.txt INSTRUCCIONES_RAPIDAS.txt INSTRUCCIONES_VISUAL.txt RESUMEN_ARCHIVOS_BAT.txt)",
      "Bash(/dev/null)",
      "Bash(rm ./docker/docker-compose.yml)",
      "Bash(docker pull postgres:15-alpine)",
      "Bash(docker run --rm postgres:15-alpine postgres --version)",
      "Read(//d/**)",
      "Bash(REINSTALAR.bat)",
      "Bash(cmd /c REINSTALAR.bat)",
      "Bash(findstr uns-claudejp)",
      "Bash(timeout 5 curl -s http://localhost:8000/api/health)",
      "Bash(findstr claudejp)",
      "Bash(timeout 120 bash -c \"while ! docker ps --filter ''name=uns-claudejp-db'' --filter ''health=healthy'' | grep -q healthy; do echo ''Waiting for PostgreSQL to be healthy...''; sleep 5; done; echo ''PostgreSQL is healthy!''\")",
      "Bash(cmd /c START.bat)",
      "Bash(docker info)",
      "Bash(findstr \"Server Version\")",
      "Bash(git init)",
      "Bash(git add .)",
      "Bash(git commit -m \"$(cat <<''EOF''\nInitial commit - UNS-ClaudeJP 4.0\n\nSistema completo de gestión de RR.HH. para agencias de personal japonesas.\n\nCaracterísticas principales:\n- Backend: FastAPI + PostgreSQL 15 + SQLAlchemy\n- Frontend: Next.js 15 + TypeScript + Tailwind CSS\n- OCR híbrido: Azure + EasyOCR + Tesseract\n- Docker Compose para orquestación\n- 15 páginas funcionales, 8 módulos core\n- Migración Excel→BD implementada\n\nMigración reciente:\n- Agregados campos: current_status, visa_renewal_alert, visa_alert_days\n- 2 triggers PostgreSQL automáticos\n- Vista vw_employees_with_age\n\nGenerated with Claude Code\nhttps://claude.com/claude-code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git add .claude/settings.local.json)",
      "Bash(git commit -m \"Update Claude settings\")",
      "Bash(git add COMO_SUBIR_A_GITHUB.md)",
      "Bash(git commit -m \"Add quick GitHub upload guide\")",
      "Bash(timeout 5 curl -s -o /dev/null -w \"%{http_code}\" http://localhost:3000)",
      "Bash(git add RESUMEN_FINAL_SESION.md)",
      "Bash(git commit -m \"Add final session summary - System ready for GitHub\")",
      "Bash(npm install next-themes recharts @tanstack/react-table zustand)"
    ],
    "deny": [],
    "ask": []
  }
}
