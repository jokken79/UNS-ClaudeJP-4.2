{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(cat:*)",
      "Bash(docker logs:*)",
      "Bash(docker-compose config:*)",
      "Bash(docker-compose down:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker start:*)",
      "Bash(docker-compose build:*)",
      "Bash(curl:*)",
      "Bash(python:*)",
      "Bash(docker ps:*)",
      "Bash(./START.bat)",
      "Bash(timeout 300 bash:*)",
      "Bash(docker-compose ps:*)",
      "Bash(docker build:*)",
      "Bash(tee:*)",
      "Bash(npm run build:*)",
      "Bash(docker restart:*)",
      "Bash(docker stats:*)",
      "Bash(time curl -s http://localhost:300)",
      "Bash(docker exec uns-claudejp-frontend sh -c \"curl -s http://localhost:3000/login > /dev/null && curl -s http://localhost:3000/dashboard > /dev/null && echo ''Pre-warmed common routes''\")",
      "Bash(docker exec:*)",
      "Bash(docker-compose restart:*)",
      "Bash(rm ANALISIS_APP.md AUTH_ERROR_401.md CAMBIOS_CODIGO.md DEPLOYMENT_LOG.md MEJORAS_APLICADAS.md RESUMEN_SOLUCION.md SECURITY_UPGRADE.md UPGRADE-TO-4.0.md FIX_DB_ERROR.md)",
      "Bash(rm COMIENZA_AQUI.txt INSTRUCCIONES.txt INSTRUCCIONES_RAPIDAS.txt INSTRUCCIONES_VISUAL.txt RESUMEN_ARCHIVOS_BAT.txt)",
      "Bash(/dev/null)",
      "Bash(rm ./docker/docker-compose.yml)",
      "Bash(docker pull postgres:15-alpine)",
      "Bash(docker run --rm postgres:15-alpine postgres --version)",
      "Read(//d/**)",
      "Bash(REINSTALAR.bat)",
      "Bash(cmd /c REINSTALAR.bat)",
      "Bash(findstr uns-claudejp)",
      "Bash(timeout 5 curl -s http://localhost:8000/api/health)",
      "Bash(findstr claudejp)",
      "Bash(timeout 120 bash -c \"while ! docker ps --filter ''name=uns-claudejp-db'' --filter ''health=healthy'' | grep -q healthy; do echo ''Waiting for PostgreSQL to be healthy...''; sleep 5; done; echo ''PostgreSQL is healthy!''\")",
      "Bash(cmd /c START.bat)",
      "Bash(docker info)",
      "Bash(findstr \"Server Version\")",
      "Bash(git init)",
      "Bash(git add .)"
    ],
    "deny": [],
    "ask": []
  }
}
